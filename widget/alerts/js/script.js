// General Variables
var settings = {
    websocketURL: "ws://localhost:8080/",
    theme: "default",
};

/**
 * Set all events to true that will be used in theme
 * if a template is not defined it will use the default.html theme
 */
const subscribeToEvents = {
    "twitch": {
        "follow": true,
        "cheer": true,
        "sub": true,
        "resub": true,
        "giftgub": true,
        "giftbomb": true,
        "raid": true,
        "hypetrainstart": true,
        "hypetrainupdate": true,
        "hypetrainlevelup": true,
        "hypetrainend": true,
        "adrun": false,
        "coincheer": false,
        "admidroll": false,
    },
    "youtube": {
        "superchat": true,
        "supersticker": true,
        "newsponsor": true,
        "membershipgift": true,
        "giftmembershipreceived": true,
        "newsubscriber": true,
    }
};


/***************************************************
 *              DO NOT EDIT THIS FILE              *
 *        THIS COULD BREAK YOUR WIDGET OR          *
 * BE A PROBLEM IF YOU WANT TO USE A NEWER VERSION *
 ***************************************************/

// Holds all templates
var templates = Array();

window.addEventListener("load", (event) => {
    // Loading templates for alerts
    templates[settings.theme] = new Array();
    Object.keys(subscribeToEvents).forEach(platform => {
        console.debug(`Loading ${platform} files`);
        templates[settings.theme][platform] = new Array();
        // Loading default html for events
        loadTemplates(settings.theme, 'default', platform);
        Object.keys(subscribeToEvents[platform]).forEach(type => {
            if (subscribeToEvents[platform][type]) {
                loadTemplates(settings.theme, type, platform);
            } else {
                console.debug(`${type} was not loaded because it's set to false.`)
            }
        });
    });
    // Connection to Streamer.Bot
    connectws();
});


/**
 * This will load all template,css files in theme/{{theme name}}
 * Check console for errors if you theme doesn't work
 * @param {string} theme
 * @param {string} type
 * @param {string} platform
 */
function loadTemplates(theme, type, platform) {

    $("#templates").load(
        `theme/${theme}/${platform}/${type}.html`,
        function (response, status, xhr) {
            console.debug(`theme/${theme}/${platform}/${type}.html`);
            if (status === "success") {
                // Loading template css
                // TODO: Make a loading theme function that calls all the one time stuff.
                /*
                $("head").append(
                    `<link rel="stylesheet" href="theme/${theme}/css/styles.css" type="text/css" />`
                );
                */

                templates[theme][platform][type] = document.querySelector(`#${theme}_${platform}_${type}`);
            }
        }
    );
}
